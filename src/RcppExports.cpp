// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// segment
List segment(arma::vec w_vector, arma::vec c_vector, int gap_size, double thresh);
RcppExport SEXP _numap_segment(SEXP w_vectorSEXP, SEXP c_vectorSEXP, SEXP gap_sizeSEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w_vector(w_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_vector(c_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type gap_size(gap_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type thresh(threshSEXP);
    rcpp_result_gen = Rcpp::wrap(segment(w_vector, c_vector, gap_size, thresh));
    return rcpp_result_gen;
END_RCPP
}
// unique_M_one_seg
arma::uvec unique_M_one_seg(arma::vec a, int wsize, int seg_start);
RcppExport SEXP _numap_unique_M_one_seg(SEXP aSEXP, SEXP wsizeSEXP, SEXP seg_startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type wsize(wsizeSEXP);
    Rcpp::traits::input_parameter< int >::type seg_start(seg_startSEXP);
    rcpp_result_gen = Rcpp::wrap(unique_M_one_seg(a, wsize, seg_start));
    return rcpp_result_gen;
END_RCPP
}
// unique_M_one_seg_long
arma::uvec unique_M_one_seg_long(arma::vec a, int wsize, int seg_start);
RcppExport SEXP _numap_unique_M_one_seg_long(SEXP aSEXP, SEXP wsizeSEXP, SEXP seg_startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type wsize(wsizeSEXP);
    Rcpp::traits::input_parameter< int >::type seg_start(seg_startSEXP);
    rcpp_result_gen = Rcpp::wrap(unique_M_one_seg_long(a, wsize, seg_start));
    return rcpp_result_gen;
END_RCPP
}
// unique_M2
arma::uvec unique_M2(arma::vec a, arma::uvec seg_start, arma::uvec seg_end, int wsize);
RcppExport SEXP _numap_unique_M2(SEXP aSEXP, SEXP seg_startSEXP, SEXP seg_endSEXP, SEXP wsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type seg_start(seg_startSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type seg_end(seg_endSEXP);
    Rcpp::traits::input_parameter< int >::type wsize(wsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(unique_M2(a, seg_start, seg_end, wsize));
    return rcpp_result_gen;
END_RCPP
}
// NCP_cal_poisson
List NCP_cal_poisson(arma::vec w_vector, arma::vec c_vector, arma::vec temp1, int ite_num);
RcppExport SEXP _numap_NCP_cal_poisson(SEXP w_vectorSEXP, SEXP c_vectorSEXP, SEXP temp1SEXP, SEXP ite_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w_vector(w_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_vector(c_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type temp1(temp1SEXP);
    Rcpp::traits::input_parameter< int >::type ite_num(ite_numSEXP);
    rcpp_result_gen = Rcpp::wrap(NCP_cal_poisson(w_vector, c_vector, temp1, ite_num));
    return rcpp_result_gen;
END_RCPP
}
// NCP_cal_poisson_4
List NCP_cal_poisson_4(arma::vec seq1, arma::vec w_vector, arma::vec c_vector, arma::mat temp4, int ite_num);
RcppExport SEXP _numap_NCP_cal_poisson_4(SEXP seq1SEXP, SEXP w_vectorSEXP, SEXP c_vectorSEXP, SEXP temp4SEXP, SEXP ite_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_vector(w_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_vector(c_vectorSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type temp4(temp4SEXP);
    Rcpp::traits::input_parameter< int >::type ite_num(ite_numSEXP);
    rcpp_result_gen = Rcpp::wrap(NCP_cal_poisson_4(seq1, w_vector, c_vector, temp4, ite_num));
    return rcpp_result_gen;
END_RCPP
}
// train4
arma::mat train4(arma::vec seq1, arma::vec w_vector, arma::vec c_vector, arma::uvec umap);
RcppExport SEXP _numap_train4(SEXP seq1SEXP, SEXP w_vectorSEXP, SEXP c_vectorSEXP, SEXP umapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_vector(w_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_vector(c_vectorSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type umap(umapSEXP);
    rcpp_result_gen = Rcpp::wrap(train4(seq1, w_vector, c_vector, umap));
    return rcpp_result_gen;
END_RCPP
}
// train42
arma::mat train42(arma::vec seq1, arma::vec w_vector, arma::vec c_vector, arma::uvec umap);
RcppExport SEXP _numap_train42(SEXP seq1SEXP, SEXP w_vectorSEXP, SEXP c_vectorSEXP, SEXP umapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_vector(w_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_vector(c_vectorSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type umap(umapSEXP);
    rcpp_result_gen = Rcpp::wrap(train42(seq1, w_vector, c_vector, umap));
    return rcpp_result_gen;
END_RCPP
}
// linker_cal
arma::rowvec linker_cal(arma::uvec umap);
RcppExport SEXP _numap_linker_cal(SEXP umapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type umap(umapSEXP);
    rcpp_result_gen = Rcpp::wrap(linker_cal(umap));
    return rcpp_result_gen;
END_RCPP
}
// auto_corr
arma::rowvec auto_corr(arma::uvec rmap, int max_lag);
RcppExport SEXP _numap_auto_corr(SEXP rmapSEXP, SEXP max_lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type rmap(rmapSEXP);
    Rcpp::traits::input_parameter< int >::type max_lag(max_lagSEXP);
    rcpp_result_gen = Rcpp::wrap(auto_corr(rmap, max_lag));
    return rcpp_result_gen;
END_RCPP
}
// occu_cal
arma::vec occu_cal(arma::uvec pos, arma::vec score, arma::vec weights, int chrom_len);
RcppExport SEXP _numap_occu_cal(SEXP posSEXP, SEXP scoreSEXP, SEXP weightsSEXP, SEXP chrom_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type pos(posSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type chrom_len(chrom_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(occu_cal(pos, score, weights, chrom_len));
    return rcpp_result_gen;
END_RCPP
}
// occu_cal_M_paired_center
arma::vec occu_cal_M_paired_center(arma::uvec start, arma::vec end, arma::vec weights, arma::vec score, int chrom_len);
RcppExport SEXP _numap_occu_cal_M_paired_center(SEXP startSEXP, SEXP endSEXP, SEXP weightsSEXP, SEXP scoreSEXP, SEXP chrom_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type start(startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type end(endSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< int >::type chrom_len(chrom_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(occu_cal_M_paired_center(start, end, weights, score, chrom_len));
    return rcpp_result_gen;
END_RCPP
}
// occu_cal_M_paired_unif
arma::vec occu_cal_M_paired_unif(arma::uvec start, arma::vec end, int chrom_len);
RcppExport SEXP _numap_occu_cal_M_paired_unif(SEXP startSEXP, SEXP endSEXP, SEXP chrom_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type start(startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type chrom_len(chrom_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(occu_cal_M_paired_unif(start, end, chrom_len));
    return rcpp_result_gen;
END_RCPP
}
// temp_update
arma::vec temp_update(arma::vec temp1, arma::vec w_vector, arma::vec c_vector);
RcppExport SEXP _numap_temp_update(SEXP temp1SEXP, SEXP w_vectorSEXP, SEXP c_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type temp1(temp1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_vector(w_vectorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_vector(c_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(temp_update(temp1, w_vector, c_vector));
    return rcpp_result_gen;
END_RCPP
}
// occu_TSS_cal
arma::vec occu_TSS_cal(arma::vec occu, arma::uvec pos, arma::uvec strand, int region);
RcppExport SEXP _numap_occu_TSS_cal(SEXP occuSEXP, SEXP posSEXP, SEXP strandSEXP, SEXP regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type occu(occuSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pos(posSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type strand(strandSEXP);
    Rcpp::traits::input_parameter< int >::type region(regionSEXP);
    rcpp_result_gen = Rcpp::wrap(occu_TSS_cal(occu, pos, strand, region));
    return rcpp_result_gen;
END_RCPP
}
// AATT_cal
arma::vec AATT_cal(arma::vec seq1, arma::uvec pos, int region);
RcppExport SEXP _numap_AATT_cal(SEXP seq1SEXP, SEXP posSEXP, SEXP regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pos(posSEXP);
    Rcpp::traits::input_parameter< int >::type region(regionSEXP);
    rcpp_result_gen = Rcpp::wrap(AATT_cal(seq1, pos, region));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_numap_segment", (DL_FUNC) &_numap_segment, 4},
    {"_numap_unique_M_one_seg", (DL_FUNC) &_numap_unique_M_one_seg, 3},
    {"_numap_unique_M_one_seg_long", (DL_FUNC) &_numap_unique_M_one_seg_long, 3},
    {"_numap_unique_M2", (DL_FUNC) &_numap_unique_M2, 4},
    {"_numap_NCP_cal_poisson", (DL_FUNC) &_numap_NCP_cal_poisson, 4},
    {"_numap_NCP_cal_poisson_4", (DL_FUNC) &_numap_NCP_cal_poisson_4, 5},
    {"_numap_train4", (DL_FUNC) &_numap_train4, 4},
    {"_numap_train42", (DL_FUNC) &_numap_train42, 4},
    {"_numap_linker_cal", (DL_FUNC) &_numap_linker_cal, 1},
    {"_numap_auto_corr", (DL_FUNC) &_numap_auto_corr, 2},
    {"_numap_occu_cal", (DL_FUNC) &_numap_occu_cal, 4},
    {"_numap_occu_cal_M_paired_center", (DL_FUNC) &_numap_occu_cal_M_paired_center, 5},
    {"_numap_occu_cal_M_paired_unif", (DL_FUNC) &_numap_occu_cal_M_paired_unif, 3},
    {"_numap_temp_update", (DL_FUNC) &_numap_temp_update, 3},
    {"_numap_occu_TSS_cal", (DL_FUNC) &_numap_occu_TSS_cal, 4},
    {"_numap_AATT_cal", (DL_FUNC) &_numap_AATT_cal, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_numap(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
